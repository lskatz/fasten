initSidebarItems({"constant":[["ALL_SEGMENTS_ALIGNED","`= 0x2`. Record and its mate mapped properly."],["FIRST_IN_PAIR","`= 0x40`. Record is the first segment in a template."],["LAST_IN_PAIR","`= 0x80`. Record is the last segment in a template."],["MATE_REVERSE_STRAND","`= 0x20`. Record mate is on the reverse strand."],["MATE_UNMAPPED","`= 0x8`. Record mate is unmapped."],["PCR_OR_OPTICAL_DUPLICATE","`= 0x400`. Record is PCR or optical duplicate."],["RECORD_FAILS_QC","`= 0x200`. Record fails platform/vendor quality checks."],["RECORD_PAIRED","`= 0x1`. Record has a mate."],["RECORD_REVERSE_STRAND","`= 0x10`. Record is on the reverse strand."],["RECORD_UNMAPPED","`= 0x4`. Record is unmapped."],["SECONDARY","`= 0x100`. Alignment is secondary (not primary)."],["SUPPLEMENTARY","`= 0x800`. Alignment is supplementary (chimeric/split)."]],"enum":[["EntriesError","An error that can arise from alignment_entries."]],"mod":[["cigar","Cigar and operations on it."],["sequence","A wrappers around raw sequence and raw qualities."],["tags","Record tags and operations on them."]],"struct":[["AlignmentEntry","Contains single position in the alignment between the record and the reference."],["EntriesIter","Iterator over alignment positions."],["Flag","A wrapper around BAM/SAM flag."],["Record","BAM Record."]]});